scchart DDDPacemaker {

input signal VSense, ASense, AVI_TO, PVARP_TO, VRP_TO, AEI_TO, LRI_TO, URI_TO;

output signal VPace, APace;
output signal AVI_ex, PVARP_ex, VRP_ex, AEI_ex, LRI_ex, URI_ex;
output signal AVI_start, PVARP_start, VRP_start, AEI_start, LRI_start, URI_start;

 

    initial state top {

      signal VP_en;

      region AVIURI:
      	
      	initial state idle --> wait with AVI_TO / AVI_ex
      						--> wait with URI_TO / URI_ex;
      	state wait --> idle with VSense || LRI_TO
      	           --> PaceV with AVI_TO / AVI_ex
      	           --> PaceV with URI_TO / URI_ex;
      	connector state PaceV --> idle with / VP_en;
      
      region PVARPVRP:
      	initial state idle --> waitVRP with PVARP_TO / PVARP_ex
      						--> waitPVARP with VRP_TO / VRP_ex;
      	state waitVRP --> idle with VRP_TO / VRP_ex
      				--> idle with AEI_TO / APace; VRP_ex
      				--> idle with ASense;
      	state waitPVARP --> idle with PVARP_TO / PVARP_ex
      				--> idle with VSense / PVARP_start; VRP_start
      				--> idle with AEI_TO / APace; VRP_ex; 
      				

	
	  region main:
  	
	  	initial state waitVS --> resetState with VSense
	  				--> resetState with (VP_en || LRI_TO) / VPace;
	  	state VTimerStart --> waitPVARPVRP with / AVI_ex; PVARP_start; VRP_start; AEI_start; LRI_start; URI_start;
	  	state waitPVARPVRP --> waitASense with (VRP_ex || PVARP_ex)
	  				--> aviReset with ASense / VRP_ex;
	  	state waitASense --> aviReset with ASense
	  				--> aviReset with AEI_TO / APace
	  				--> waitPVARPVRP with VSense / PVARP_start; VRP_start;
	  	connector state resetState --> VTimerStart with / LRI_ex; URI_ex;
	  	connector state aviReset --> waitVS with / AVI_start; AEI_ex;

    };

}